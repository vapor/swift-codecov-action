name: Swift Codecov Upload Action
description: A GitHub Action which performs Codecov.io uploads with additional support for Swift projects.
branding:
  icon: feather
  color: orange

inputs:
  ignore_paths:
    description: A regular expression which specifies paths in the repository which will not be included in the coverage data. The /.build folder is always ignored.
    required: false
    default: '/Tests/'
  package_path:
    description: The location of the repository. Defaults to $GITHUB_WORKSPACE. This will be used as the working_directory for the Codecov upload action.
    required: false
    # N.B.: Can not simply default to github.workspace here, as it will not be correctly updated when the action is called from
    # within a job which runs in a container.
    default: ''
  build_parameters:
    description: Additional parameters needed by swift build and swift test to disambiguate the correct target and configuration, i.e. -c release. Only flags which affect the output binary path are required.
    required: false
    default: ''
  # The following are passthrough parameters for the Codecov upload action.
  cc_token:            { description: 'See https://github.com/codecov/codecov-action#arguments', required: false, default: '' }
  cc_flags:            { description: 'See https://github.com/codecov/codecov-action#arguments', required: false, default: '' }
  cc_env_vars:         { description: 'See https://github.com/codecov/codecov-action#arguments', required: false, default: '' }
  cc_fail_ci_if_error: { description: 'See https://github.com/codecov/codecov-action#arguments', required: false, default: '' }
  cc_verbose:          { description: 'See https://github.com/codecov/codecov-action#arguments', required: false, default: '' }
  cc_dry_run:          { description: 'See https://github.com/codecov/codecov-action#arguments', required: false, default: '' }

runs:
  using: composite
  steps:
    
    - id: determine-package-info
      shell: bash
      env:
        PACKAGE_PATH: ${{ format('--package-path {0}', inputs.package_path != '' && inputs.package_path || github.workspace) }}
        BUILD_PARAMETERS: ${{ inputs.build_parameters }}
      run: |
        binpath="$(swift build ${PACKAGE_PATH} ${BUILD_PARAMETERS} --show-bin-path)"

        pkgname="$(swift package ${PACKAGE_PATH} describe --type json | perl -e 'use JSON::PP; print (decode_json(join("",(<>)))->{name});')"
        excname="${pkgname}PackageTests.xctest"; [[ -d "${excname}" ]] && excname+="/Contents/macOS/${excname%*.xctest}"

        # https://github.com/apple/swift-package-manager/issues/5853 - broken by 5.8, fixed in 5.9
        if [[ "$(swift package --version)" =~ 5\.8\.[0-9]+$ ]]; then
            covpath="${binpath}/codecov"
        else
            covpath="$(dirname "$(swift test ${PACKAGE_PATH} ${BUILD_PARAMETERS} --show-codecov-path)")"
        fi

        echo "COVERAGE_OBJECT=${binpath}/${excname}" >>"${GITHUB_ENV}"
        echo "COVERAGE_DATA=${covpath}/default.profdata" >>"${GITHUB_ENV}"

    - id: convert-coverage-report
      env:
        PACKAGE_PATH:  ${{ inputs.package_path != '' && inputs.package_path || github.workspace }}
        IGNORE_PATHS:  ${{ inputs.ignore_paths }}
        TOKEN:         ${{ inputs.cc_token            != '' && format('"token":"{0}",',          inputs.cc_token)            || '' }}
        FLAGS:         ${{ inputs.cc_flags            != '' && format('"flags":"{0}",',          inputs.cc_flags)            || '' }}
        ENVVAR:        ${{ inputs.cc_env_vars         != '' && format('"env_vars":"{0}",',       inputs.cc_env_vars)         || '' }}
        RAISEERR:      ${{ inputs.cc_fail_ci_if_error != '' && format('"fail_ci_if_error":{0},', inputs.cc_fail_ci_if_error) || '' }}
        VERBOSE:       ${{ inputs.cc_verbose          != '' && format('"verbose":{0},',          inputs.cc_verbose)          || '' }}
        DRY_RUN:       ${{ inputs.cc_dry_run          != '' && format('"dry_run":{0},',          inputs.cc_dry_run)          || '' }}
      run: |
        $(which xcrun || true) llvm-cov show \
            --format=text \
            --ignore-filename-regex='/\.build/|(${IGNORE_PATHS})' \
            --instr-profile="${COVERAGE_DATA}" \
            "${COVERAGE_OBJECT}" \
            >"${PACKAGE_PATH}/codecov.txt"

        printf 'params={%s"files":"codecov.txt","root_dir":"%s"}' "${TOKEN}${FLAGS}${ENVVAR}${RAISEERR}${VERBOSE}${DRY_RUN}" "${PACKAGE_PATH}" >>"${GITHUB_OUTPUT}"

    - id: upload-coverage-report
      uses: codecov/codecov-action@v3
      with: ${{ fromJSON(steps.convert-coverage-report.outputs.params) }}
