name: test
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
on:
  push: { branches: [ 'main' ] }
  workflow_dispatch:

jobs:
  linux-containerized-toplevel:
    strategy:
      fail-fast: false
      matrix:
        swift: 
          - swift:6.1-noble
          - swiftlang/swift:nightly-main-noble
    runs-on: ubuntu-latest
    container: ${{ matrix.swift }}
    steps:
      - run: apt-get update -y && apt-get install -y curl
      - uses: actions/checkout@v4
      - run: swift test --enable-code-coverage
      - uses: vapor/swift-codecov-action@main
        with:
          codecov_token: ${{ secrets.CODECOV_TOKEN }}
          dry_run: true
          verbose: true

  linux-containerized-subpath:
    strategy:
      fail-fast: false
      matrix:
        swift:
          - swift:6.1-noble
          - swiftlang/swift:nightly-main-noble
    runs-on: ubuntu-latest
    container: ${{ matrix.swift }}
    steps:
      - run: apt-get update -y && apt-get install -y curl
      - uses: actions/checkout@v4
      - run: swift test --package-path sample-coverage-data --enable-code-coverage
      - uses: vapor/swift-codecov-action@main
        with:
          codecov_token: ${{ secrets.CODECOV_TOKEN }}
          dry_run: true
          verbose: true
          package_path: sample-coverage-data

  macos-toplevel:
    runs-on: macos-15
    steps:
      - uses: maxim-lobanov/setup-xcode@v1
        with: { xcode-version: latest-stable }
      - uses: actions/checkout@v4
      - run: swift test --enable-code-coverage
      - uses: vapor/swift-codecov-action@main
        with:
          codecov_token: ${{ secrets.CODECOV_TOKEN }}
          dry_run: true
          verbose: true

  macos-subpath:
    runs-on: macos-16
    steps:
      - uses: maxim-lobanov/setup-xcode@v1
        with: { xcode-version: latest-stable }
      - uses: actions/checkout@v4
      - run: swift test --package-path sample-coverage-data --enable-code-coverage
      - uses: vapor/swift-codecov-action@main
        with:
          codecov_token: ${{ secrets.CODECOV_TOKEN }}
          dry_run: true
          verbose: true
          package_path: sample-coverage-data

  windows:
    if: ${{ false }}
    runs-on: windows-latest
    steps:
      - name: Configure dev environment
        uses: compnerd/gha-setup-vsdevenv@main
        with:
          toolset_version: 14.29
          winsdk: 10.0.22621.0
      - uses: compnerd/gha-setup-swift@main
        with: { branch: 'swift-6.1-release', tag: '6.1-RELEASE' }
      - uses: actions/checkout@v4
      - run: |
          swift test \
            -Xbuild-tools-swiftc -windows-sdk-root -Xbuild-tools-swiftc "${env:WindowsSdkDir}" \
            -Xbuild-tools-swiftc -windows-sdk-version -Xbuild-tools-swiftc ${env:UCRTVersion} \
            -Xswiftc -windows-sdk-root -Xswiftc "${env:WindowsSdkDir}" \
            -Xswiftc -windows-sdk-version -Xswiftc ${env:UCRTVersion} \
            --package-path sample-coverage-data --enable-code-coverage
        shell: bash
      - run: env
        shell: bash
      - uses: vapor/swift-codecov-action@main
        with:
          codecov_token: ${{ secrets.CODECOV_TOKEN }}
          dry_run: true
          verbose: true
          package_path: sample-coverage-data
